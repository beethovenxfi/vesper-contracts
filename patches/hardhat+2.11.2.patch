diff --git a/node_modules/hardhat/internal/artifacts.js b/node_modules/hardhat/internal/artifacts.js
index 17bdbb1..61b2a42 100644
--- a/node_modules/hardhat/internal/artifacts.js
+++ b/node_modules/hardhat/internal/artifacts.js
@@ -328,6 +328,23 @@ class Artifacts {
         this._cache?.artifactNameToArtifactPathCache.set(name, result);
         return result;
     }
+
+    async _getArtifactPathNoError(name) {
+        const cached = this._cache?.artifactNameToArtifactPathCache.get(name);
+        if (cached !== undefined) {
+            return cached;
+        }
+        let result;
+        if ((0, contract_names_1.isFullyQualifiedName)(name)) {
+            result = await this._getValidArtifactPathFromFullyQualifiedName(name);
+        }
+        else {
+            const files = await this.getArtifactPaths();
+            result = this._getArtifactPathFromFilesNoError(name, files);
+        }
+        this._cache?.artifactNameToArtifactPathCache.set(name, result);
+        return result;
+    }
     _createBuildInfo(id, solcVersion, solcLongVersion, input, output) {
         return {
             id,
@@ -551,6 +568,20 @@ Please replace "${contractName}" for the correct contract name wherever you are
         }
         return matchingFiles[0];
     }
+
+    _getArtifactPathFromFilesNoError(contractName, files) {
+        const matchingFiles = files.filter((file) => {
+            return path.basename(file) === `${contractName}.json`;
+        });
+        if (matchingFiles.length === 0) {
+           return this._handleWrongArtifactForContractName(contractName, files);
+        }
+        if (matchingFiles.length > 1) {
+            const candidates = matchingFiles.map((file) => this._getFullyQualifiedNameFromPath(file));
+            return candidates
+        }
+        return matchingFiles[0];
+    }
     /**
      * Returns the FQN of a contract giving the absolute path to its artifact.
      *
